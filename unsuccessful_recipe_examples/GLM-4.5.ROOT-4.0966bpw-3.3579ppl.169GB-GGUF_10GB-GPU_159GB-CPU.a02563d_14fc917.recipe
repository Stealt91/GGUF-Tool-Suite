# We can do better here, PPL is high because distribution should be better balanced around iq4_ks and is too much towards iq3_k, using different bpw quants would solve this
## Quant mix recipe created using Thireus' GGUF Tool Suite - https://gguf.thireus.com/
# Model name: GLM-4.5
# Link to the original model: https://huggingface.co/zai-org/GLM-4.5

## Model head & embeddings — qbits: 32 8 
output_norm\.weight=f32
token_embd\.weight=q8_0
output\.weight=q8_0

## Multi-headed attention parameters — qbits: 32 4 
blk\.([0-9]|[1-8][0-9]|9[0-2])\.attn_k\.bias=f32
blk\.([0-9]|[1-8][0-9]|9[0-2])\.attn_output\.weight=iq4_xs
blk\.([0-9]|[1-8][0-9]|9[0-2])\.attn_k\.weight=iq4_xs
blk\.([0-9]|[1-8][0-9]|9[0-2])\.attn_q\.weight=iq4_xs
blk\.([0-9]|[1-8][0-9]|9[0-2])\.attn_q\.bias=f32
blk\.([0-9]|[1-8][0-9]|9[0-2])\.attn_k_norm\.weight=f32
blk\.([0-9]|[1-8][0-9]|9[0-2])\.attn_v\.bias=f32
blk\.([0-9]|[1-8][0-9]|9[0-2])\.attn_v\.weight=iq4_xs
blk\.([0-9]|[1-8][0-9]|9[0-2])\.attn_norm\.weight=f32
blk\.([0-9]|[1-8][0-9]|9[0-2])\.attn_q_norm\.weight=f32

## Core FFN weights — qbits: 32 8 6 5 
blk\.(0|2)\.ffn_up\.weight=iq6_k
blk\.[1-2]\.ffn_gate\.weight=iq6_k
blk\.[0-1]\.ffn_down\.weight=iq6_k
blk\.0\.ffn_gate\.weight=iq5_k_r4
blk\.1\.ffn_up\.weight=iq5_k_r4
blk\.([3-9]|[1-8][0-9]|9[0-2])\.ffn_gate_inp\.weight=f32
blk\.2\.ffn_down\.weight=q8_0

## Other tensors — qbits: 32 4 
blk\.([0-9]|[1-8][0-9]|9[0-2])\.post_attention_norm\.weight=f32
blk\.92\.nextn\.shared_head_head\.weight=iq4_xs
blk\.92\.nextn\.embed_tokens\.weight=iq4_xs
blk\.92\.nextn\.shared_head_norm\.weight=f32
blk\.([3-9]|[1-8][0-9]|9[0-2])\.exp_probs_b\.bias=f32
blk\.92\.nextn\.enorm\.weight=f32
blk\.92\.nextn\.hnorm\.weight=f32
blk\.92\.nextn\.eh_proj\.weight=iq4_xs

## GPU-loaded ffn_*_shexp
# ffn_down_shexp (down-projection) — qbits: 8 6 5 
blk\.(9|15|19|23|26|30|32|91|1[0-2]|4[1-2]|2[8-9])\.ffn_down_shexp\.weight=q8_0
blk\.([3-8]|31|33|35|59|74|76|90|92|8[0-5]|1[6-8]|[6-7][0-2]|5[0-7]|4[4-9]|6[4-6]|6[8-9]|8[8-9]|1[3-4]|3[7-9])\.ffn_down_shexp\.weight=iq6_k
blk\.(27|34|36|40|43|58|63|67|73|75|2[0-2]|8[6-7]|7[7-9]|2[4-5])\.ffn_down_shexp\.weight=iq5_k_r4

# ffn_up_shexp (up-projection) — qbits: 8 6 5 
blk\.(3|7|9|11|26|35|84|91|3[1-2]|3[8-9]|[1-2][3-4])\.ffn_up_shexp\.weight=q8_0
blk\.([4-5]|8|10|12|30|37|40|43|45|60|63|86|89|90|92|7[0-5]|2[0-2]|8[1-2]|[1-2][8-9]|1[5-6]|3[3-4]|4[7-9]|7[7-9]|6[6-9]|5[0-8])\.ffn_up_shexp\.weight=iq6_k
blk\.(6|17|25|27|36|44|46|59|76|80|83|85|4[1-2]|6[1-2]|8[7-8]|6[4-5])\.ffn_up_shexp\.weight=iq5_k_r4

# ffn_gate_shexp (gate-projection) — qbits: 8 6 5 
blk\.(3|9|25|30|33|46|60|68|84|86|88|3[5-6]|9[0-1]|1[4-5])\.ffn_gate_shexp\.weight=q8_0
blk\.([4-8]|16|26|34|49|62|69|77|79|85|87|89|92|6[5-7]|4[1-2]|7[0-4]|5[0-9]|[1-2][8-9]|2[0-1]|2[3-4]|1[0-3]|8[0-3]|4[4-5])\.ffn_gate_shexp\.weight=iq6_k
blk\.(17|22|27|40|43|61|78|3[1-2]|4[7-8]|7[5-6]|6[3-4]|3[7-9])\.ffn_gate_shexp\.weight=iq5_k_r4

## CPU-loaded ffn_*_exps
# ffn_down_exps (down-extraction) — qbits: 6 5 4 3 
blk\.92\.ffn_down_exps\.weight=iq6_k
blk\.([3-5]|11|18|22|35|61|3[0-1])\.ffn_down_exps\.weight=iq5_k_r4
blk\.(6|8|19|59|60|68|78|81|4[2-9]|1[3-5]|5[0-7]|6[3-6]|7[1-6]|2[4-5])\.ffn_down_exps\.weight=iq4_ks
blk\.(7|9|10|12|23|58|62|67|69|70|77|79|80|8[2-9]|1[6-7]|2[0-1]|4[0-1]|9[0-1]|3[2-4]|[2-3][6-9])\.ffn_down_exps\.weight=iq3_k

# ffn_up_exps (up-extraction) — qbits: 6 5 4 3 
blk\.92\.ffn_up_exps\.weight=iq6_k
blk\.(13|16|19|24|28|34)\.ffn_up_exps\.weight=iq5_k_r4
blk\.(11|17|20|23|36|82|88|4[6-8]|6[0-2]|5[0-9]|7[0-9]|[3-4][0-1]|4[3-4]|6[7-9]|1[4-5]|6[4-5])\.ffn_up_exps\.weight=iq4_ks
blk\.([3-9]|10|12|18|29|35|42|45|49|63|66|89|2[5-7]|2[1-2]|[8-9][0-1]|3[2-3]|3[7-9]|8[3-7])\.ffn_up_exps\.weight=iq3_k

# ffn_gate_exps (gate-extraction) — qbits: 6 5 4 3 
blk\.92\.ffn_gate_exps\.weight=iq6_k
blk\.(17|19|28|1[1-2]|3[0-1]|2[0-3])\.ffn_gate_exps\.weight=iq5_k_r4
blk\.(10|24|26|41|43|58|78|4[6-8]|5[0-1]|[8-9][0-1]|1[3-6]|5[3-6]|7[0-6]|6[7-9]|6[4-5])\.ffn_gate_exps\.weight=iq4_ks
blk\.([3-9]|18|25|27|29|40|42|49|52|57|59|66|77|79|3[2-9]|8[2-9]|6[0-3]|4[4-5])\.ffn_gate_exps\.weight=iq3_k

## Summary of tensor sizes per class
# GPU Total: 10.979 GiB (95.1%) | 11.55 GiB max, if all were q8_0 | 10.07 GiB min, if all were iq5_k_r4
# CPU Total: 159.915 GiB (73.3%) | 218.02 GiB max, if all were iq5_k_r4 | 137.36 GiB min, if all were iq3_k
# GPU+CPU Total: 170.895 GiB (84.2%)

## Summary of tensor counts and bpw per qtype
#
# GPU-loaded quants:
# QTYPE		Count	BPW	Assigned GiB	% Assigned	Max GiB (all)
# +f32       	835	32.0  	  0.28 GiB	-		-
# q8_0      	51 	8.5   	  1.97 GiB	47.0%		4.20
# iq6_k     	170	6.625 	  1.29 GiB	39.3%		3.27
# iq5_k_r4  	60 	5.5   	  0.37 GiB	13.7%		2.72
# +iq4_xs    	375	4.25  	  7.07 GiB	-		-
#
# CPU-loaded quants:
# QTYPE		Count	BPW	Assigned GiB	% Assigned	Max GiB (all)
# +iq6_k     	3  	6.625 	  2.91 GiB	-		-
# iq5_k_r4  	27 	5.5   	 21.75 GiB	10.1%		215.11
# iq4_ks    	121	4.25  	 75.33 GiB	45.3%		166.22
# iq3_k     	119	3.4375	 59.92 GiB	44.6%		134.45
#
# -Average BPW: 4.0966
#
# -Notes:
# - '+' means user-defined pre-assigned tensors, or tensor missing from csv data or f32 tensors
# - Recipe produced on the 2025-08-08 11:21:30 UTC+0000 using Thireus' GGUF tools (https://gguf.thireus.com/)
# - Script SHA-256: a02563df96ccec6c78ab7c716771153ae5f5ef4e9ee6a04d372f273eb1662e9c
# - Calibration dataset 'ppl_results.csv' SHA-256: eee3f314cf1ecaa746932341b2189f8a7718e62489bbd250f957c4aec82c0015
# - tensors.bf16.map SHA-256: 4e8b7b435f6257174a7adfc90290ac92c36758fef201ba0f5358338eea7606b8
# - tensors.bf16.map model name: GLM-4.5-THIREUS-BF16-SPECIAL_TENSOR-01762-of-01762
# - tensors.iq4_ks.map SHA-256: d0b98943a74acb3cacb78bebf0865eb050c8dece3f4ee963fadca909bbc5bb1a
# - tensors.iq4_ks.map model name: GLM-4.5-THIREUS-IQ4_KS-SPECIAL_TENSOR-01762-of-01762
# - tensors.iq3_k.map SHA-256: 7ff49ed3aaa4ced3888cb887e3cafb1f58577ea7d713bbf5da795c45185de501
# - tensors.iq3_k.map model name: GLM-4.5-THIREUS-IQ3_K-SPECIAL_TENSOR-01762-of-01762
# - tensors.iq5_k_r4.map SHA-256: c13be13e7b38a6206c03c5c77d5fda27e281b38fff35a1cbe26c024d8cc98741
# - tensors.iq5_k_r4.map model name: GLM-4.5-THIREUS-IQ5_K_R4-SPECIAL_TENSOR-01762-of-01762
# - tensors.q8_0.map SHA-256: 2814e1547cf288d327264135ed3f83e612b879826640283037d45f95a22ebfe2
# - tensors.q8_0.map model name: GLM-4.5-THIREUS-Q8_0-SPECIAL_TENSOR-01762-of-01762
# - tensors.iq6_k.map SHA-256: 8ef4d5c379126fc13dfb46bbc8c10308d2c8e78602c0b3f6cea197d963fc80f1
# - tensors.iq6_k.map model name: GLM-4.5-THIREUS-IQ6_K-SPECIAL_TENSOR-01762-of-01762
# - tensors.iq2_ks.map SHA-256: 4ed9fc5a73d854ad30f9f75577a1d826150cb23283a0bb54dba45d6aba6c9de2
# - tensors.iq2_ks.map model name: GLM-4.5-THIREUS-IQ2_KS-SPECIAL_TENSOR-01762-of-01762
# - tensors.iq4_xs.map SHA-256: 04fca6aea2769a5003f30707a62c4447f15387756a2f335d211e1186b63742d0
# - tensors.iq4_xs.map model name: GLM-4.5-THIREUS-IQ4_XS-SPECIAL_TENSOR-01762-of-01762
# - GPG signatures: PASSED
# - Command used:
# ../../quant_assign.py ppl_results.csv --tolerance 0.01 --cpu-irq-k 1.5 --gpu-irq-k 1.5 --gpu-assign-qtype iq4_xs \
# --cpu-tensors-max-size 160 --gpu-tensors-max-size 95% --exponential-factor 8 --cpu-tensors \
# 'blk\.([3-9]|[1-8][0-9]|9[0-1])\.ffn_down_exps\.weight' 'blk\.([3-9]|[1-8][0-9]|9[0-1])\.ffn_up_exps\.weight' \
# 'blk\.([3-9]|[1-8][0-9]|9[0-1])\.ffn_gate_exps\.weight' --gpu-tensors '.*' --cpu-quants iq4_ks iq3_k iq5_k_r4 \
# --gpu-quants q8_0 iq5_k_r4 iq6_k --cpu-assign-tensors 'blk\.(92)\.ffn_down_exps\.weight=iq6_k' \
# 'blk\.(92)\.ffn_up_exps\.weight=iq6_k' 'blk\.(92)\.ffn_gate_exps\.weight=iq6_k'

## THE END!

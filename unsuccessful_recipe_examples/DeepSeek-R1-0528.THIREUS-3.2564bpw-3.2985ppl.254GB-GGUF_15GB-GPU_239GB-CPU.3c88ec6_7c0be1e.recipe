# Bad recipe because using old version of quant_assign, and incorrect ppl! - see issue #21
## Quant mix recipe created using Thireus' GGUF Tool Suite - https://gguf.thireus.com/
# Model name: DeepSeek-R1-0528
# Link to the original model: https://huggingface.co/deepseek-ai/DeepSeek-R1-0528

## Model head & embeddings — qbits: 32 8 
output_norm\.weight=f32
token_embd\.weight=q8_0
output\.weight=q8_0

## Special attention kernels — single-quant only (llama-quantize takes care of it) — qbits: 8 
blk\.([0-9]|[1-5][0-9]|60)\.attn_k_b\.weight=q8_0

## Multi-headed attention parameters — qbits: 32 6 
blk\.([0-9]|[1-5][0-9]|60)\.attn_kv_a_norm\.weight=f32
blk\.([0-9]|[1-5][0-9]|60)\.attn_q_b\.weight=iq6_k
blk\.([0-9]|[1-5][0-9]|60)\.attn_kv_b\.weight=iq6_k
blk\.([0-9]|[1-5][0-9]|60)\.attn_q_a_norm\.weight=f32
blk\.([0-9]|[1-5][0-9]|60)\.attn_output\.weight=iq6_k
blk\.([0-9]|[1-5][0-9]|60)\.attn_kv_a_mqa\.weight=iq6_k
blk\.([0-9]|[1-5][0-9]|60)\.attn_v_b\.weight=iq6_k
blk\.([0-9]|[1-5][0-9]|60)\.attn_norm\.weight=f32
blk\.([0-9]|[1-5][0-9]|60)\.attn_q_a\.weight=iq6_k

## Core FFN weights — qbits: 32 8 6 5 
blk\.2\.ffn_gate\.weight=q8_0
blk\.(0|2)\.ffn_up\.weight=iq6_k
blk\.([0-9]|[1-5][0-9]|60)\.ffn_norm\.weight=f32
blk\.[0-1]\.ffn_gate\.weight=iq6_k
blk\.1\.ffn_down\.weight=iq6_k
blk\.2\.ffn_down\.weight=iq5_k_r4
blk\.1\.ffn_up\.weight=iq5_k_r4
blk\.([3-9]|[1-5][0-9]|60)\.ffn_gate_inp\.weight=f32
blk\.0\.ffn_down\.weight=q8_0

## Other tensors — qbits: 32 
blk\.([3-9]|[1-5][0-9]|60)\.exp_probs_b\.bias=f32

## GPU-loaded ffn_*_shexp
# ffn_down_shexp (down-projection) — qbits: 8 6 5 
blk\.(11|17|29|36|39|44|60|2[6-7]|2[0-4]|3[0-1]|3[3-4])\.ffn_down_shexp\.weight=q8_0
blk\.([3-8]|10|12|19|25|28|32|35|5[6-8]|3[7-8]|1[4-6]|5[0-4]|4[5-9]|4[0-3])\.ffn_down_shexp\.weight=iq6_k
blk\.(9|13|18|55|59)\.ffn_down_shexp\.weight=iq5_k_r4

# ffn_up_shexp (up-projection) — qbits: 8 6 5 
blk\.(6|15|18|21|26|30|37|39|41|54|60|2[8-9]|2[3-4]|3[2-4])\.ffn_up_shexp\.weight=q8_0
blk\.([3-5]|[8-9]|19|20|22|25|27|31|38|40|58|4[2-9]|1[6-7]|1[0-4]|3[5-6]|5[5-6]|5[0-3])\.ffn_up_shexp\.weight=iq6_k
blk\.(7|57|59)\.ffn_up_shexp\.weight=iq5_k_r4

# ffn_gate_shexp (gate-projection) — qbits: 8 6 5 
blk\.(16|20|29|34|54|60|5[6-8]|5[0-2]|4[1-2]|4[4-6]|1[8-9]|4[8-9]|2[3-6])\.ffn_gate_shexp\.weight=q8_0
blk\.([3-5]|[7-9]|17|21|40|43|47|53|55|2[7-8]|3[5-9]|3[0-3]|1[1-5])\.ffn_gate_shexp\.weight=iq6_k
blk\.(6|10|22|59)\.ffn_gate_shexp\.weight=iq5_k_r4

## CPU-loaded ffn_*_exps
# ffn_down_exps (down-extraction) — qbits: 4 3 2 1 
blk\.(39|4[0-2]|3[2-7]|4[7-9]|4[4-5])\.ffn_down_exps\.weight=iq4_ks
blk\.(14|38|43|46|60|1[1-2]|2[0-9]|1[8-9]|3[0-1]|5[0-8])\.ffn_down_exps\.weight=iq3_k
blk\.(10|16|59)\.ffn_down_exps\.weight=iq2_k
blk\.([3-9]|13|15|17)\.ffn_down_exps\.weight=iq1_m_r4

# ffn_up_exps (up-extraction) — qbits: 4 3 2 1 
blk\.(44|50)\.ffn_up_exps\.weight=iq4_ks
blk\.(15|21|29|60|2[4-7]|3[1-9]|5[1-9]|4[5-9]|4[0-3])\.ffn_up_exps\.weight=iq3_k
blk\.(3|[5-6]|[8-9]|20|28|30|1[6-8]|1[1-4]|2[2-3])\.ffn_up_exps\.weight=iq2_k
blk\.(4|7|10|19)\.ffn_up_exps\.weight=iq1_m_r4

# ffn_gate_exps (gate-extraction) — qbits: 4 3 2 1 
blk\.(41|44|55|4[6-9])\.ffn_gate_exps\.weight=iq4_ks
blk\.(20|22|40|45|60|5[0-4]|3[0-9]|1[8-9]|4[2-3]|2[7-9]|5[6-9]|2[4-5])\.ffn_gate_exps\.weight=iq3_k
blk\.(5|9|21|26|1[2-6])\.ffn_gate_exps\.weight=iq2_k
blk\.([3-4]|[6-8]|17|23|1[0-1])\.ffn_gate_exps\.weight=iq1_m_r4

## Summary of tensor sizes per class
# GPU Total: 15.020 GiB (96.0%) | 15.64 GiB max, if all were q8_0 | 13.69 GiB min, if all were iq5_k_r4
# CPU Total: 239.750 GiB (74.1%) | 323.53 GiB max, if all were iq4_ks | 133.22 GiB min, if all were iq1_m_r4
# GPU+CPU Total: 254.770 GiB (85.1%)

## Summary of tensor counts and bpw per qtype
#
# GPU-loaded quants:
# QTYPE		Count	BPW	Assigned GiB	% Assigned	Max GiB (all)
# +f32       	361	32.0  	  0.40 GiB	-		-
# +q8_0      	61 	8.5   	  0.51 GiB	-		-
# q8_0      	65 	8.5   	  2.98 GiB	53.8%		5.54
# +iq6_k     	366	6.625 	  9.20 GiB	-		-
# iq6_k     	106	6.625 	  1.65 GiB	38.3%		4.32
# iq5_k_r4  	14 	5.5   	  0.28 GiB	7.9%		3.58
#
# CPU-loaded quants:
# QTYPE		Count	BPW	Assigned GiB	% Assigned	Max GiB (all)
# iq4_ks    	24 	4.25  	 44.62 GiB	13.8%		323.53
# iq3_k     	98 	3.4375	147.38 GiB	56.3%		261.68
# iq2_k     	29 	2.375 	 30.13 GiB	16.7%		180.80
# iq1_m_r4  	23 	1.75  	 17.61 GiB	13.2%		133.22
#
# -Average BPW: 3.2564
#
# -Notes:
# - '+' means user-defined pre-assigned tensors and f32 tensors
# - Recipe produced on the 2025-07-12 01:42:46 BST+0100 using Thireus' GGUF tools (https://gguf.thireus.com/)
# - Script SHA-256: 3c88ec66185ed0999d6be95e1d8e5fb2d22000c404863f0c2fa301a44160f8c3
# - Command used:
# quant_assign.py ppl_results.csv --gpu-tensors '.*' --cpu-tensors \
# 'blk\.([3-9]|[1-5][0-9]|60)\.ffn_down_exps\.weight' 'blk\.([3-9]|[1-5][0-9]|60)\.ffn_up_exps\.weight' \
# 'blk\.([3-9]|[1-5][0-9]|60)\.ffn_gate_exps\.weight' --cpu-quants iq4_ks iq3_k iq2_k iq1_m_r4 --gpu-quants q8_0 \
# iq5_k_r4 iq6_k --cpu-tensors-max-size 240 --gpu-tensors-max-size 15 --tolerance 0.01 --exponential-factor 8 \
# --gpu-assign-qtype iq6_k --gpu-assign-tensors 'blk\.([0-9]|[1-5][0-9]|60)\.attn_k_b\.weight=q8_0'

## THE END!
